plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    runtimeOnly 'mysql:mysql-connector-java:8.0.26'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    //Swagger
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'io.springfox:springfox-swagger2:2.9.2'

    runtimeOnly 'com.h2database:h2'


    //JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'


    //Test Lombok
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    //Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Cache
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    //JWT
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    //annotationProcessor
    //config에 user, password안 쓰고 application.yaml에 숨기기 위함
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

}
tasks.named('test') {
    useJUnitPlatform()
}
